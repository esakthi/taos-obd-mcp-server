plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'jacoco'
}

group = 'com.taos.obd.mcp'
version = '0.0.1-SNAPSHOT'
description = "taos-obd-mcp-server to expose spacex launch data to LLM's via MCP Protocol"

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
	maven {
		name = 'Central Portal Snapshots'
		url = 'https://central.sonatype.com/repository/maven-snapshots/'
	}
}

ext {
    set('springdocVersion', "2.5.0")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-graphql'
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springdocVersion}"
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.ai:spring-ai-starter-mcp-server-webmvc:1.0.0'
	implementation 'org.springframework.ai:spring-ai-core:1.0.0'
	implementation 'org.springframework.ai:spring-ai-starter-model-ollama:1.0.0'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.graphql:spring-graphql-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation "com.squareup.okhttp3:mockwebserver:4.9.3"
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacoco {
    toolVersion = "0.8.11"
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                '**/dto/**',
                '**/config/**',
                '**/exception/**',
                '**/*Application.class'
            ])
        }))
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = 'CLASS'
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.9
            }
            excludes = [
                'com.taos.obd.mcp.TaosObdMcpServerApplication',
                'com.taos.obd.mcp.dto.*',
                'com.taos.obd.mcp.config.*',
                'com.taos.obd.mcp.exception.*'
            ]
        }
    }
}

check.dependsOn jacocoTestCoverageVerification
